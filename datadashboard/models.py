
from django.db import models
from django.core.exceptions import ValidationError


class DataReport(models.Model):
    """Stores metadata for an analytics export generated by the dashboard."""
    FORMAT_CHOICES = (("csv", "CSV"), ("json", "JSON"))

    report_name = models.CharField(max_length=100)
    start_date  = models.DateField()
    end_date    = models.DateField()
    format      = models.CharField(max_length=10, choices=FORMAT_CHOICES)
    lot_id      = models.CharField(max_length=100, blank=True)  # optional: used for peak-hour queries
    rows_count  = models.PositiveIntegerField(default=0)        # integrity summary
    checksum    = models.CharField(max_length=64, blank=True)   # optional integrity hash
    created_at  = models.DateTimeField(auto_now_add=True)

    class Meta:
        ordering = ["-created_at"]

    def clean(self):
        if self.start_date and self.end_date and self.start_date > self.end_date:
            raise ValidationError("start_date cannot be after end_date")

    @property
    def duration_days(self) -> int:
        return (self.end_date - self.start_date).days + 1

    def __str__(self):
        return f"{self.report_name} ({self.format}) {self.start_date} â†’ {self.end_date}"

